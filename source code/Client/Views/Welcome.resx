<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAMAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/yACa/8oAwf/IAEYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//8AAv/KAMn/ygD+/8oAkP/IADP/ywBA/8sARP/MADL/qgADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/yQCA/8oA///KAP//ygD//8oA///KAP//ygD//8oA7P/K
        AHz/xgAJAAAAAAAAAAAAAAAAAAAAAAAAAAD/yQAh/8oA2v/KAP//ygD//8oA///KAP//ygD//8oA///K
        AP//ygD//8oA2v/MACMAAAAAAAAAAAAAAAD/0QAL/8oA1//KAP//ygD//8oA///KAP//ygD//8oA///K
        AP//ygD//8oA///KAP//ygDc/9EACwAAAAAAAAAA/8kAdv/KAP//ygD//8oA///KAP//ygD//8oA///K
        AP//ygD//8oA///KAP//ygD//8oA///KAHkAAAAAAAAAAP/KAMr/ygD//8oA/P/KAJD/ygDE/8oA///K
        AKj/ygCp/8oA///JAMP/ygCQ/8oA/f/KAP//ygDJAAAAAAAAAAD/ygDm/8oA///KAMcAAAAA/8kAL//K
        APj//wAB//8AAv/KAPr/yAAuAAAAAP/KAMn/ygD//8oA5gAAAAAAAAAA/8oAz//KAP//ygD6/8sAf//K
        ALj/ygD//8kAmP/KAJn/ygD//8oAtv/LAH//ygD7/8oA///KAM0AAAAAAAAAAP/KAIL/ygD//8oA///K
        AP//ygD//8oA///KAP//ygD//8oA///KAP//ygD//8oA///KAP//yQCAAAAAAAAAAAD/wwAR/8oA5v/K
        AP//ygD//8oA///KAP//ygD//8oA///KAP//ygD//8oA///KAP//ygDk/8wADwAAAAAAAAAAAAAAAP/I
        AC7/ygDn/8oA///KAP//ygD//8oA///KAP//ygD//8oA///KAP//ygDm/8sALAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/8UAFv/KAJr/ygD3/8oA///KAP//ygD//8oA///KAPf/yQCY/84AFQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/9EAC//LAET/yQBV/8kAVf/KAEP/zAAKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAM//AADj/wAA4B8AAOAHAADAAwAAwAMAAIABAACNsQAAiBEAAIABAADAAwAA4AcAAPAP
        AAD//wAA//8AAA==
</value>
  </data>
</root>